var busqueda_idx = {
  
  "cambio-blogger-jekyll":{
    "titulo":"Cambio de blog, de Blogger a Jekyll",
    "contenido":"\n\n Índice\n \n\n  Jekyll    \n      Breve introducción a los templates en Jekyll\n      Breve introducción a las publicaciones en Jekyll\n      Breve introducción a los includes en Jekyll\n      Mudando las publicaciones de Blogger al formato de Jekyll\n    \n  \n  Escogiendo un tema para el blog\n  Bulma\n  Plugins para Jekyll\n  Cosas extras    \n      Analíticas y anuncios en el blog\n      Búsqueda dentro del blog\n      Comentarios\n      Varios\n    \n  \n  Conclusiones    \n      Lo bueno\n      Lo malo\n    \n  \n\n\n    \n\n\n\nLuego de dejar el blog original abandonado por demasiado tiempo encontré que la forma en la que he estado manejando cada publicación resultaba ser muy incómoda, me explico, en Blogger por defecto no se pueden mostrar bloques de código y similares para eso hay que agregar librerías extra, esto no resulta tan difícil básicamente es editar el código html del tema que se utilice lo molesto viene después al querer introducir bloques de código hay que escribir bloques html entre el contenido de la publicación, estos no siempre funcionaban a la primera por lo que al final pasaba mas tiempo editando el html de cada entrada para que coincidiera con lo que quería.\n\n\n  \n    \n  \n  Edición de HTML al escribir una publicación en Blogger\n\n\nUna opción que tenía era mudar el blog por completo a otro CMS, intenté con WordPress pero aquello no terminó de convencerme, luego estaba Jekyll que ya le había dado una oportunidad antes pero aquello no cuajó bien debido a mi nulo conocimiento sobre como modificar Jekyll para conseguir lo que quería, luego de algunos intentos al fin logré dominar algunas de las características a un nivel que me pareciera aceptable como para utilizarlo en ‘producción’.\n\nJekyll\n\nIntentando explicar de la forma más simple que se me ocurre, Jekyll es un generador de sitios estáticos con el cual se pueden re-utilizar bloques de HTML según los requerimientos que uno tenga.\n\nBreve introducción a los templates en Jekyll\n\nPor ejemplo en este blog tengo una plantilla llamada default en dónde coloco todas las librerías de JS y estilos CSS.\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n  &lt;link rel=\"stylesheet\" href=\"mis_estilos.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;section class=\"section\"&gt;\n      {{ content }} &lt;== aquí se reemplazará por el contenido\n  &lt;/section&gt;\n&lt;/body&gt;\n&lt;script src=\"mis_scripts.js\"&gt;&lt;/script&gt;\n&lt;/html&gt;\nEsta plantilla la puedo extender para un uso especifico por ejemplo para las publicaciones llamando a la nueva plantilla post y agregando los elementos extra que necesito para mostrar como yo quiero las publicaciones.\n---\nlayout: default &lt;== indica que el contenido después de ---\n                    debe incluirse en el archivo default\n                    al momento de renderizar esta página\n---\n\nContenido del post que quiero renderizar con esta plantilla.\nLo cual daría como resultado algo parecido a lo siguiente:\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n  &lt;link rel=\"stylesheet\" href=\"mis_estilos.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;section class=\"section\"&gt;\n      &lt;p&gt;Contenido del post que quiero renderizar con esta plantilla.&lt;/p&gt;\n  &lt;/section&gt;\n&lt;/body&gt;\n&lt;script src=\"mis_scripts.js\"&gt;&lt;/script&gt;\n&lt;/html&gt;\nMas información en la documentación oficial.\nBreve introducción a las publicaciones en Jekyll\n\nLas publicaciones en Jekyll se escriben utilizando Markdown, aunque al principio parezca algo limitado es posible utilizar algunos trucos \npara adaptar el resultado a lo que necesitamos.\n\nLas publicaciones deben estar en una carpeta llamada _post en la raíz del proyecto, la extensión de los archivos puede ser .md para markdown aunque también se pueden utilizar archivos .html pero no es recomendable, para indicar la información de una entrada (Front Matter) se utiliza yaml, por ejemplo.\n---\n\nlayout: post &lt;== Indica la plantilla a utilizar para renderizar el archivo.\ntitle: Blogging Like a Hacker &lt;== Título de la publicación/página.\n\n---\n\nContenido de la publicación\nMas información en la documentación oficial de front matter\ny la documentación oficial de publicaciones.\nBreve introducción a los includes en Jekyll\n\nSe pueden agregar bloques de HTML con alguna función en especial que acepten valores dinámicos o no, estos se guardan en una carpeta llamada _includes en el directorio raíz de proyecto, por ejemplo para enlaces externos utilizo un archivo llamado e_externo.html que contiene lo siguiente.\n\n&lt;span&gt;\n&lt;a href=\"{{ include.url | default: '#'}}\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;\n{{ include.texto | default: 'Enlace'}}\n&lt;/a&gt; &lt;/span&gt;\n\nEn este archivo include.url será reemplazada por una url einclude.textopor el texto que se mostrará como enlace, al momento de utilizarlo debo escribir algo parecido a lo siguiente:\nEquiqueta antes de ser renderizada:\n{%- include e_externo.html url='https://lewatoto.github.io' texto=\"Lewatoto's Blog\" -%}\nEtiqueta renderizada:\n&lt;span&gt;&lt;a href=\"https://lewatoto.github.io\" target=\"_blank\" rel=\"noopener noreferrer\"&gt;Lewatoto's Blog&lt;/a&gt;&lt;/span&gt;\nMas información en la documentación oficial.\nMudando las publicaciones de Blogger al formato de Jekyll\n\nPara importar las publicaciones solo basta seguir el manual para Blogger \nde jekyll-import.\n\nLuego de seguir los pasos que nos indican ahí, terminaremos con un archivo.xml, una carpeta llamada _posts y otra llamada _drafts con algunos archivos .html parecidos a esto:\n---\n\nlayout: post\ntitle: \"[Reseña] Huion Kamvas Pro 16 (2019)\"\ndate: '2020-11-23T12:00:00.007-06:00'\nauthor: Lewatoto\ntags:\n- Reseñas\nmodified_time: '2020-11-23T23:59:21.637-06:00'\nthumbnail: https://1.bp.blogspot.com/-RLPPljENNm0/X7xBCU_n4YI/AAAAAAAAEI4/zAfNqpjEehYvPewOgSEZLMcRMUi-ADLggCNcBGAsYHQ/s72-w400-c-h300/Huion%2BKamvas%2Bpro%2B16%2Bbleeding.jpg\nblogger_id: ' '\nblogger_orig_url: https://frechako.blogspot.com/2020/11/resena-huion-kamvas-pro-16-2019.html\n\n---\n\nContenido de la entrada en formato HTML\nLuego de esto ya solo queda adaptar el contenido para que funcione con el tema que hemos escogido o desarrollado desde cero, como fue mi caso. Esto tal vez sea lo más tedioso pero si se genera una buena estructura en la información de las publicaciones puede que no lo sea tanto.\n\nEscogiendo un tema para el blog\n\nLa parte que más me intimidaba para hacer el cambio a Jekyll era lo relacionado con el tema que utilizaría en el blog, una de las primeras cosas que hice fue buscar en las galerías que existen pero siempre tenía la inquietud de cuanto tiempo el autor le daría soporte a dicho tema, no es que necesitara estar utilizando las últimas tendencias en diseño o algo por el estilo, pero al menos no quería que me dejaran varado luego de algún tiempo, la solución a esto la encontré con bulma.io.\n\n  \n    \n  \n  Página de inicio Bulma.io\n\n\nBulma\n\nResumiendo Bulma es un framework de css en donde solo se necesitan aplicar las clases necesarias a tus elementos HTML para que adquieran el estilo que uno desee, por ejemplo: utilizando un botón como base.\n\nBotón con el estilo por defecto\n&lt;button&gt;Botón&lt;/button&gt;\nBotón\n\nBotón con el estilo aplicado por Bulma\n&lt;button class=\"button\"&gt;Botón&lt;/button&gt;\nBotón\n\nSi queremos cambiar el color del botón basta con agregar lo siguiente:\n&lt;button class=\"button is-info\"&gt;Botón&lt;/button&gt;\n&lt;button class=\"button is-danger\"&gt;Botón&lt;/button&gt;\nBotón\nBotón\n\nLa documentación \nde este framework es una de las mejores que he visto, existen varios ejemplos y te indica que variables son las que intervienen en las características de cada elemento por si se quiere modificar luego en el archivo sass, para empezar algunas cosas importantes a tener en cuenta:\n\n  Se puede utilizar un esquema de columnas, el tamaño de cada columna puede ser modificado de forma individual.\n  La orientación es vertical por defecto, pero se puede cambiar.\n  Algunos elementos pueden cambiar basándose en el tamaño de la pantalla, para ello existen 5 modificadores disponibles:\n    \n      mobile hasta 768 px.\n      tablet desde 769 px.\n      desktop desde 1024 px.\n      widescreen desde 1216 px.\n      fullhd desde 1048 px.\n    \n  \n  No necesita de código JS para funcionar, aunque algunos elementos requieren de una implementación simple.\n\n\nCon estas características y teniendo una idea del diseño que quería que tuviera el blog, fue relativamente simple implementarlo con el plus de que se mostraría de forma correcta en los distintos dispositivos bueno, al menos en los que probé se ve bien.\n\nPlugins para Jekyll\n\nEste es un listado de los plugin que he visto que mencionan mas en algunas publicaciones sobre como configurar tu blog estático con Jekyll y mi experiencia al intentar utilizarlos, la mayoría de estos no funciona con github-pages aunque el blog puede ser implementado usando las github actions o renderizándolo en local y luego subiendo la carpeta _site a nuestro repositorio:\n\n  \n    Jekyll-seo-tag (repositorio): \nCon este plugin se maneja toda la información para generar resultados enriquecidos en los buscadores o cuando un enlace de nuestro blog es compartido en alguna red social.\n\n    Inicialmente funciona bien pero en lo personal me encontré con algunos problemas para implementarlo, por ejemplo cuando el contenido no es un articulo o publicación de blog el plugin no agrega la característica og:type content=\"website\" aunque tiene la opción para especificar el tipo de contenido, este está solo acepta los valores: BlogPosting, NewsArticle, Person u Organization.\n\n    Además de que posee ciertas líneas que se encuentran solo en inglés, por estos problemas al final decidí crear las etiquetas seo a mano, basándome en otros sitios y en la documentación de las etiquetas de Open Graph Protocol y ld+json de schema.org.\n  \n  Jekyll-paginate-v2 (repositorio): \nEs mencionado en la documentación \nde Jekyll como reemplazo del anterior plugin para paginación, permite la creación automática de índices para las categorías y etiquetas que se utilicen en el blog e incluso se puede aplicar una plantilla para el diseño, la documentación es buena el único problema que encontré es que en la generación automática de los índices para etiquetas y categorías, los títulos de las paginas se encuentran en minúscula esto se soluciona utilizando filtros en liquid.\n  Jekyll-feed (repositorio): \nNo es que yo use los feed mucho pero tener uno no te quita nada, el problema es que tiene ciertos valores por defecto que no son compatibles con la forma en que tengo cada publicación, la solución a esto fue copiar la plantilla\ny editarla según los valores que tengo en cada entrada.\n  Jekyll-sitemap (repositorio): \nCon este plugin se genera el mapa de su sitio, es útil para que los buscadores indexen bien su contenido.\n  Jekyll-last-modified-at (repositorio): \nEste plugin agrega el campo de última vez modificado a sus archivos, es útil para incluir esta información entre las etiquetas seo.\n  Jekyll-minifier (repositorio): \nElimina todos los elementos innecesarios de los archivos generados por jekyll, reduce el peso del sitio de forma considerable, el único problema es que necesita ser ejecutado utilizando la variable JEKYLL_ENV=production para que pueda comprimir todo el sitio.\n\n\nCosas extras\n\nAnalíticas y anuncios en el blog\nAl realizar el cambio perdí la integración fácil que tenía con Bing / Google Analytics / Adsense / Search Console, así como las notificaciones sobre el uso de cookies y recolección de datos que se integraban de forma automática, por lo tanto esa parte la tuve que implementar por mi cuenta, me tomó como 3 días entender bien o al menos creer que lo entendí bien, por lo tanto ahora al ingresar al sitio por primera vez se pedirá una confirmación para cargar estos scripts.\n\nSi bien en el país en dónde vivo no tenemos una ley que me obligue a hacer esto asumí que no estaba de más implementarlo. En un futuro espero implementar algún sistema de analíticas que sea mas amigable con la privacidad de los usuarios, tengo algunos opciones en mente para esto.\n\nBúsqueda dentro del blog\nAl principio quería usar algún servicio externo para esto, pero terminé utilizando javascript para realizar la búsquedas dentro del sitio. En mis pruebas con 20 publicaciones de contenido relativamente grande no note retrasos en su funcionamiento, por lo que de momento esa parte se encuentra cubierta.\n\nComentarios\nRespecto al tema de privacidad quería mantener al mínimo la inclusión de componentes externos que me obligaran a pedir permiso para activar el servicio, al principio me encontré con utteranc,\npero esto limitaba un poco a solo usuarios de GitHub pudieran comentar, por lo que al final decidí incluir Disqus como sistema de comentarios aunque esto podría cambiar.\n\nVarios\nEsto de refiere a cosas como la tabla de contenido o índice que pueden ver en el inicio de la entrada y detalles como que se resalten los títulos por los que se está navegando o incluso el botón de regresar al inicio , por el momento tengo que refinar el código tengo una mezcla extraña entre javascript vanila y jquerry.\n\nConclusiones\n\nEl cambio no ha sido tan fácil como pensaba, lo que en un principio pensé que me tomaría como 3 días incluso 5 como máximo pero termino siendo mi proyecto de las últimas 2 semanas. Entre las coas buenas de esta experiencia es el conocimiento que tengo ahora sobre como etiquetar el contenido utilizando las reglas de schema.org y The Open Graph Protocol, o sobre cosas como la carga lazy de imágenes y vídeos, al momento de escribir esto no he probado que tan rápido carga el sitio, cuando lo publiqué haré las pruebas y mostraré los resultados.\n\nPor lo tanto si alguien está interesado en realizar el cambio, yo le animaría a que lo hiciera probando primero todo lo que ofrece Jekyll trabajando con el sitio en local puede realizar todos los cambios que necesite e incluso visualizar el sitio desde varios dispositivos (para esto hay que configurar el firewall, pero es simple).\n\nLo bueno\n\n  El conocimiento adquirido al tener que realizarlo todo “a mano”.\n  El control que tengo sobre cada elemento del sitio es algo que no tenía con Blogger, al menos no con la misma facilidad con la que siento que Jekyll lo maneja.\n  En teoría el sitio carga más rápido, pero esto necesita ser comprobado.\n  Al ser un sitio estático el hosting de las github pages de momento me es suficiente e incluso permiten agregar un dominio personalizado.\n\n\nLo malo\n\n  Se necesita tener algo de conocimientos de js, html, css, sass si se planea hacer el tema para Jekyll desde cero en vez de utilizar un tema.\n  La integración con los sistemas de recopilación de estadísticas de uso, anuncios (Google Analytics y similares) hay que realizarla a mano, aunque algunos temas poseen estas opciones integradas.\n  Dependiendo de los scripts que se incluyan en el sitio quizá sea necesario pedir la autorización del usuario para su activación, la implementación de este permiso puede ser algo tedioso.\n  El manejo de los archivos estáticos es un poco molesto, existía un plugin que solucionaba esto pero dejó de funcionar y el autor parece que ya no le da mantenimiento.\n\n",
    "excerpt":"Primeras impresiones sobre lo que significa cambiar el blog de un generador de contenido como Blogger a uno estático como Jekyll, algunos plugins que pueden ser útiles y uno que otro consejo por si alguien esta interesado en hacer el cambio",
    "url":"https://lewatoto.github.io/cambio-blogger-jekyll/",
    "fecha_publicada": "2021-09-29T00:26:00-06:00",
    "imagen": "https://lewatoto.github.io/assets/img/post/cambio-blogger-jekyll/portada.jpg",
    "etiquetas": ["Made in Guatemala","Reseñas"]
  },
  
  "resena-huion-kamvas-pro-16-2019":{
    "titulo":"[Reseña] Huion Kamvas Pro 16 (2019)",
    "contenido":"\n\n Índice\n \n\n  Especificaciones técnicas\n  Precio\n  ¿Qué viene incluido?\n  Instalación\n  Funcionamiento\n  Pantalla\n  Lápiz incluído\n  Calibración\n  Ergonomía\n  Experiencia de dibujo/trabajo\n  Conclusiones    \n      Lo bueno de la tableta\n      Lo malo de la tableta\n    \n  \n  Reseña más técnica\n\n\n    \n\n\nLuego de ver desde la distancia varios de estos modelos, al fin pude hacerme con una, las opciones que tenía eran la XP-PEN Artist15.6 Pro o la Huion Kamvas Pro 16, en el papel estas dos tabletas gráficas son similares lo que me hizo escoger la Kamvas por encima de la XP-Pen fue el soporte para Linux que había (aunque en ese momento no había investigado mucho al respecto).\n\nNo es un equipo patrocinado, por lo tanto las opiniones de este artículo reflejan mi opinión personal (de alguien que compra un producto de estos por primera vez, pero con experiencia en las tabletas digitalizadoras sin pantalla) y la del estado en que me llegó este equipo, las especificaciones de la tableta son:\n\nEspecificaciones técnicas\nDISPOSITIVO:\n- Color: silver black\n- Dimensiones: 437.8 x 251.2 x 11.5mm\n- Área de trabajo: 344.16 x 193.59mm\n- Peso neto: 1.35 Kg aproximadamente 3 libras, ya con el embalaje y demás a mi me llegó a pesar casi las 6 libras\n- Soporte: Variable ST200/ST300 20°/45°\n\nPANTALLA\n- Resolución: 1920 x 1080（16:9）\n- Tipo de LCD: IPS Anti reflejos\n- Pantalla laminada:\n- Contraste: 1000:1\n- Brillo: 220cd/m2\n- Tiempo de respuesta: 25ms\n- Ángulos de visión: 89°/89°(H)/89°/89°(V) (Typ.)(CR＞10)\n- Gama: 120% sRGB\n- Color: 16.7M(8bit)\n\nOTRAS ESPECIFICACIONES\n- Lápiz incluido: PW507\n- Tecnología del lápiz: Resonancia electromagnética, sin batería\n- Resolución del lápiz: 5080 LPI\n- Sensibilidad de presión: 8192 niveles\n- Soporte de inclinación: ±60°\n- Altura a la que es detectado: 10mm\n- Precisión del lápiz: ±0.5mm（centro） ±3mm（esquinas）\n- Botones programables: 6\n¿En qué se traduce todos estos números y cosas elegantes? lo puedo simplificar en una frase, ¡es hermoso!.\n\nPrecio\n\nYo compré esta tableta en noviembre de 2019, el precio normal en Amazon es de $398.65 pero al momento de comprarla tenía un descuento de $40 por lo tanto el precio final en Amazon fue de $358.65, al momento de escribir esto el mismo modelo tiene un descuento de $100, el enlace del producto es https://www.amazon.com/gp/product/B07RXZC12J/.\n¿Qué viene incluido?\n\nEn mi caso compré la versión que incluía la base para la tableta, pero se puede comprar sin esto y ahorrar un poco de dinero con esto.\n- Tableta Huion Kamvas Pro 16\n- Base ajustable para la tableta\n- Lápiz sin batería, modelo PW507\n- Base para el lápiz\n- 10 puntas de repuesto para el lápiz\n- Anillo extractor de puntas\n- Guante talla universal para utilizar la tableta\n- Un paño para limpiar la pantalla, parecido a los que se utilizan para los anteojos\n- Cable 3 en 1 para conectar la tableta a la corriente eléctrica y a la computadora\n- Adaptador 12V 1A\n- Guía de inicio rápido\nInstalación\n\nEste es un producto que necesita estar conectado a una computadora para funcionar, es necesario contar con un puerto HDMI y un puerto USB para datos, la tableta se alimenta con un adaptador de 12V y 1A incluido.\n\nEn el caso de Windows, hay que descargar los controladores disponibles en la página oficial https://store.huion.com/products/kamvas-pro-16 \nen la sección de descargas, su instalación es simple, solo hay que instalar el controlador y luego conectar la tableta, windows se encarga del resto de forma automática.\n\nEn Linux hay que realizar unas configuraciones extra, para hacer que funcione estoy trabajando en otra publicación donde lo explico de forma más detallada todo este proceso.\n\nFuncionamiento\n\nEl cambio entre la Huion H610 y esta tableta es increíble, funciona perfectamente con los programas que uso, que son Krita, Blender, RawTherapee y Paintstorm Studio. Que sea una pantalla laminada significa que el vidrio superior está lo más cercano posible a la pantalla para evitar que se vea un desfase entre la punta del lápiz y el lugar en el que se ubica el cursor, aunque requiere adaptar un poco las cosas para lograr un funcionamiento adecuado.\n\nLos accesos directos para los botones se pueden configurar desde la aplicación de Huion al igual que el comportamiento de la barra táctil, se puede acceder a las opciones de brillo, contraste, etc. tanto desde la aplicación de Huion como desde la tableta utilizando uno de los botones extra para activar el menú OSD.\n\nCuando la utilizo el tiempo promedio ronda las 5 o 6 horas y la tableta no se calienta tanto, algunas partes se sienten tibias después de un tiempo pero nada que sea alarmante para sesiones largas de trabajo.\n\nPantalla\n\nEn cuanto a la calibración de los colores en la pantalla según lo que leí viene calibrada de fábrica, cosa que no puedo comprobar debido a que no poseo un colorímetro, lo que hice fue utilizar una aplicación que esta disponible en la tienda de Windows que utiliza el sensor de la cámara de un celular (de preferencia Samsung) para realizar las mediciones, no es algo tan preciso pero logré ver una pequeña mejora respecto a como se presentaban los colores con la configuración por defecto.\n\nLa resolución de 1080p de la tableta en mi opinión es la justa para trabajar con este tamaño de pantalla, por defecto en Windows y Linux tengo la escala del escritorio a 125%, las aplicaciones se ven de forma correcta y no he tenido problemas con esto.\n\nAlgo que no me gustó de la pantalla es que tuviera ‘sangrado’ en la parte central superior, con el tiempo me he acostumbrado reduciendo el brillo de la pantalla, pero al inicio pensé que me había llegado un equipo defectuoso, por lo que pude leer es casi imposible que estas pantallas no tengan ese ‘sangrado’ si hasta las Wacom con un precio mucho mayor no se libran de este problema, adjunto una imagen de como se ve mi pantalla con un fondo oscuro.\n\n\n  \n    \n  \n  Vista del sangrado de la pantalla de la Huion Kamvas Pro 16\n\n\nLápiz incluído\n\nEn mis tabletas anteriores, los lápices funcionaban con una batería AAA, al parecer desde que la patente de Wacom sobre la tecnología que permite hacer esto venciera, los fabricantes de alternativas han mejorado mucho los diseños y el funcionamiento en general. El lápiz no se siente pesado y es cómodo al trabajar con sesiones largas.\n\nCalibración\n\nLa tableta viene calibrada de fábrica, en teoría funciona relativamente bien si trabajan la mayor parte del tiempo en la sección central de la tableta, el problema es que al acercarse a los bordes de esta el cursor se desvía de la punta del lápiz, esto ocurre debido a que el sensor del lápiz no se encuentra directamente en la punta, al parecer esta entre los botones y la punta del lápiz, esto crea la desviación cuando la inclinación del lápiz cambia.\n\nUn dato curioso es que la desviación en los bordes de la pantalla es mucho menos notoria en Linux que en Windows, incluso cuando solo conecté la tableta para ver si era reconocida sin instalar nada adicional.\n\nAl parecer en Huion están al tanto de esto y deberían estar trabajando en ello, de momento el problema persiste en Windows. Una de las formas en que se puede corregir esto es calibrar de forma manual la tableta, este proceso es largo y tedioso debido que al calibrar el sistema pide que se haga clic en 9 puntos en la pantalla, pero no hay que hacer clic en el punto que indican, hay que desviarse un poco e ir probando, con esto se compensa un poco este problema.\n\nErgonomía\n\nTrabajar con esta clase de tabletas implica un cambio en la forma de organizar los elementos en el escritorio, si van a trabajar en distintos lugares procuren contar con una conexión de las estándar ya que esta tableta no puede ser alimentada por usb-c, al menos no lo he intentado, en lo personal recomiendo tener un teclado usb extra si se utiliza con una laptop, en el blog de David Revoy hay un artículo extenso en el que habla de la ergonomía de trabajar con tabletas gráficas, el único inconveniente es que se encuentra en inglés (tal vez en un futuro publique la traducción al español), el enlace al artículo es el siguiente, https://www.davidrevoy.com/article30/ergonomics-of-graphics-tablets.\nExperiencia de dibujo/trabajo\n\nEn general es muy placentero trabajar con esta tableta, la textura de la pantalla si bien no se asemeja a la del papel no se siente como la sensación a escribir con un lápiz sobre vidrio que tenía con la H610, en cuanto a trazos largo que requieren ser lo más rectos posibles si los intentan hacer a mano y tienen buen pulso lo más probable es que los puedan realizar sin ningún problema, aunque para esto pueden utilizar las herramientas disponibles para esto en los programas que utilicen.\n\nLa desviación que se presenta en los bordes de la pantalla no afecta en gran manera la experiencia de dibujo en general, yo me logré acostumbrar a estas pequeñas desviaciones en los primeros 15 o 20 minutos de uso y pude trabajar sin problemas en la mayoría de las veces.\n\nConclusiones\n\nCreo que la tableta en general es un buen punto de partida para las personas que se compran una tableta gráfica con pantalla por primera vez, es decir personas con experiencia previa, si estas pensando en que esta puede ser tu primera tableta digitalizadora yo me atrevería primero con alguna más económica, es posible que en el camino ya no te llame tanto la atención y al menos no pierdas tanto dinero.\n\nIncluso me atrevería a decir que es útil para cualquier nivel al que trabajen (por pasatiempo o de forma profesional), no pesa demasiado por lo que transportarla es muy simple, yo utilizo una mochila que tiene bolsa para laptop de 15 pulgadas y cabe justa junto con la laptop.\n\nEste año anunciaron la Huion Kamvas 16 2021, se encuentra disponible con envío gratis por evento de lanzamiento https://store.huion.com/products/kamvas-16-2021 \n(siempre tengan en cuenta los tiempos de envío, políticas de devolución, garantías e impuestos que les pueden aplicar al producto en su país cuando lo importen) al parecer han mejorado la tecnología del lápiz, por lo tanto espero que la desviación de la que menciono en esta reseña ya fuera arreglada.\n\nLo bueno de la tableta\n\n\n  Calidad de contrucción muy buena (para alguien que tiene una por primera vez).\n  La base incluída permite hasta 6 posiciones.\n  La representación de los colores luego de mi intento de calibrarlos, es muy buena.\n  Es cómodo trabajar con el lápiz en sesiones largas.\n  La conexión usb-c simplifica mucho la forma en que se organizan los cables en el área de trabajo.\n\n\nLo malo de la tableta\n\n\n  El ‘sangrado’ de la pantalla que viene siendo cuestión de suerte cuanto te afecta.\n  La desviación que existe en los bordes de la tableta, que implican pasar un buen tiempo intentando calibrarla.\n\n\nReseña más técnica\n\nCuando me estaba informando sobre esta tableta, encontré esta reseña de Nikage en el blog ‘Digital Art Tablet Guides’, en donde se tocan temas más técnicos, realiza pruebas mas detalladas e incluso utiliza un colorímetro para calibrar la pantalla, el único problema es que está en inglés, el enlace es:\n\n\n  https://digitalarttabletguides.wordpress.com/2019/06/12/huion-kamvas-pro-16-review/\n\n",
    "excerpt":"Reseña de la tableta digitalizadora Huion Kamvas Pro 16 luego de un año de uso, lo bueno y también lo malo.",
    "url":"https://lewatoto.github.io/resena-huion-kamvas-pro-16-2019/",
    "fecha_publicada": "2020-11-23T12:00:00-06:00",
    "imagen": "https://lewatoto.github.io/assets/img/post/resena-huion-kamvas-pro-16-2019/portada.jpg",
    "etiquetas": ["Reseñas"]
  },
  
  "configurar-diccionario-espanol-atom":{
    "titulo":"Configurar diccionario español en Atom en Fedora",
    "contenido":"\n\n Índice\n \n\n  Paquetes de idiomas disponibles\n  Instalando el diccionario\n  Configurando el diccionario en Atom\n\n\n    \n\n\nReviviendo un poco el blog, por si le sirve a alguien la forma en la que se agrega el diccionario en español para Atom es la siguiente:\n\nPaquetes de idiomas disponibles\n\nPrimero instalan el paquete hunspell correspondiente a su idioma, para buscar los disponibles escriben en una terminal como root:\ndnf serarch huspell | grep es\nhunspell-es-CL.noarch : Chilean Spanish hunspell dictionary\nhunspell-es-MX.noarch : Mexican Spanish hunspell dictionary\nhunspell-nr.noarch : Southern Ndebele hunspell dictionaries\nhunspell-es-BO.noarch : Bolivian Spanish hunspell dictionary\nhunspell-es-ES.noarch : European Spanish hunspell dictionary\nhunspell-es-HN.noarch : Honduran Spanish hunspell dictionary\nhunspell-es-PE.noarch : Peruvian Spanish hunspell dictionary\nhunspell-es-AR.noarch : Argentine Spanish hunspell dictionary\nhunspell-es-CO.noarch : Colombian Spanish hunspell dictionary\nhunspell-es-DO.noarch : Dominican Spanish hunspell dictionary\nhunspell-es-UY.noarch : Uruguayan Spanish hunspell dictionary\nhunspell-es-GT.noarch : Guatemalan Spanish hunspell dictionary\nhunspell-es-EC.noarch : Ecuadorian Spanish hunspell dictionary\nhunspell-es-NI.noarch : Nicaraguan Spanish hunspell dictionary\nhunspell-es-PA.noarch : Panamanian Spanish hunspell dictionary\nhunspell-es-PY.noarch : Paraguayan Spanish hunspell dictionary\nhunspell-es-SV.noarch : Salvadoran Spanish hunspell dictionary\nhunspell-es-VE.noarch : Venezuelan Spanish hunspell dictionary\nhunspell-es-CR.noarch : Costa Rican Spanish hunspell dictionary\nhunspell-es-PR.noarch : Puerto Rican Spanish hunspell dictionary\nInstalando el diccionario\n\nEn mi caso sería:\ndnf install hunspell-es-GT\nConfigurando el diccionario en Atom\n\nPara activarlo en Atom con Ctrl + , (coma) abren el panel de las configuraciones, seleccionan en “paquetes” y buscan Spell Check y en la parte donde dice locales colocan el código del paquete de idioma que instalaron en mi caso fue hunspell-es-GT lo coloco como es_GT.\n\n  \n    \n  \n  Ventana de configuración de Spell Check de Atom\n\n\nY con esto ya esta configurado el diccionario en español para los archivos que así lo requieran.\n",
    "excerpt":"Guía de como configurar un diccionario para la corrección ortográfica en español en Atom",
    "url":"https://lewatoto.github.io/configurar-diccionario-espanol-atom/",
    "fecha_publicada": "2019-12-12T08:00:00-06:00",
    "imagen": "https://lewatoto.github.io/assets/img/post/configurar-diccionario-espanol-atom/portada.jpg",
    "etiquetas": ["Linux","Tutoriales"]
  },
  
  "instalar-python-basemap-matplotlib-fedora":{
    "titulo":"Instalar python basemap matplotlib en fedora",
    "contenido":"\n\n Índice\n \n\n  Omitiendo el uso de un entorno virtual\n  Instalando el entorno virtual\n  Instalando dependencias de basemap\n  Instalando basemap\n  Verificando la instalación\n\n\n    \n\n\nAl realizar un proyecto necesitaba esta librería y me tope con el problema de que el paquete geos incluido en la descarga no podía ser instalado, según pude ver eran problemas con isnan luego de pasar medio día buscando que hacer, encontré la solución.\n\nEn esta guía se asume que están utilizando un entorno virtual para python, esto es lo recomendado para evitar que se les mezclen las librerías y al final se haga un desastre.\n\nOmitiendo el uso de un entorno virtual\n\nEn caso de que no utilicen un entorno virtual basemap se puede instalar directo desde dnf, solo escogen los paquetes que van a utilizar de los siguientes\npython-basemap-data.noarch : Data for python-basemap\npython-basemap-examples.x86_64 : Example programs and data for python-basemap\npython-basemap-data-hires.noarch : High resolution map data for python-basemap\npython-basemap.x86_64 : Plots data on map projections (with continental and political boundaries)\npython3-basemap.x86_64 : Plots data on map projections (with continental and political boundaries)\nInstalando el entorno virtual\n\nRegresando a lo nuestro, si no saben como crear el entorno virtual primero deben ejecutar como root lo siguiente en una consola.\ndnf install python2-virtualenv #en el caso de utilizar python 2.7\ndnf install python3-virtualenv #en el caso de utilizar python3\nLuego como usuario normal con cd se ubican en la carpeta donde desean tener su entorno virtual de python y ejecutan en una consola.\nvirtualenv nombre\nDonde nombre es el que tendrá la carpeta donde estará el entorno virtual, para utilizarlo se usan los siguientes comandos.\n. nombre/bin/activate #nombre es el que eligieron en el paso anterior\ndeactivate #desactiva el entorno virtual\nInstalando dependencias de basemap\n\nLuego instalan las dependencias de basemap con.\npip install matplotlib numpy pyproj pyshp OWSLib Pillow #los últimos 2 son opcionales\ndnf install geos geos-devel #como root\nInstalando basemap\n\nLuego descargan basemap de su repositorio \nal momento de realizar este guía la versión actual es 1.1.0, lo descomprimen y se ubican con cd en esa carpeta desde la consola y ejecutan.\npip install .\nVerificando la instalación\n\nCon eso ya tienen instalado Basemap en su entorno virtual, para confirmar que la instalación fue realizada con éxito pueden listar los paquetes instalados con.\npip list\nEntre la lista que despliega ese comando deben encontrar algo como.\nbasemap (1.1.0)\n",
    "excerpt":"Guía de instalación del paquete matplotlib en un entorno virtual en Fedora",
    "url":"https://lewatoto.github.io/instalar-python-basemap-matplotlib-fedora/",
    "fecha_publicada": "2017-05-26T23:51:00-06:00",
    "imagen": "https://lewatoto.github.io/assets/img/post/instalar-python-basemap-matplotlib-fedora/portada.jpg",
    "etiquetas": ["Linux","Tutoriales","Python"]
  },
  
  "compartir-conexion-internet-gnome-3":{
    "titulo":"Compartir conexión a internet por cable en Gnome 3",
    "contenido":"\n\n Índice\n \n\n  Editando las conexiónes de red\n  Agregando una nueva conexión\n  Propiedades de la nueva conexión\n  Probando con la Raspberry Pi\n  Fuente\n\n\n    \n\n\nDebido a que no siempre tendré un router cerca cuando este haciendo mis experimentos con la Raspberry Pi y creo no ser el único, decidí buscar la forma de compartir la conexión a Internet que tiene la laptop por wifi por medio de un cable de red, la forma en que me funcionó es la siguiente.\n\nEditando las conexiónes de red\n\nEn una terminal ejecutan\nnm-connection-editor\nLo cual les mostrará una ventana como esta.\n\n  \n    \n  \n  Ventana de las conexiones de red\n\n\nAgregando una nueva conexión\n\nHacen clic en agregar, como interfaz seleccionan Ethernet y luego en crear, les pedirá su contraseña de root.\n\n  \n    \n  \n  Ventana para seleccionar el tipo de conexión\n\n\nPropiedades de la nueva conexión\n\nLuego aparecerá la siguiente ventana.\n\n  \n    \n  \n  Ventana para editar las características de la nueva conexión\n\n\nEn esa ventana tienen que.\n\n  Nombrar la conexión, por defecto aparece como Ethernet connection.\n  En donde dice dispositivo Device seleccionan el único que aparece, por lo menos en mi caso solo apareció uno.\n  En la pestaña IPv4 Settings en Method seleccionan Shared to other computers.\n  Clic en guardar y listo.\n\n\nProbando con la Raspberry Pi\n\nCon esto solo hace falta conectar la Raspberry Pi por medio de un cable a la computadora, para ver que ip le fué asignada ejecutan en una terminal.\narp -a\nLes mostrará un listado con el siguiente formato\nNombre host (ip del host) at dirección MAC de la interfaz [ether] on nombre de la interfaz\nEn mi caso la raspbarry apareció como ? (ip raspberry) y me conecte escribiendo en una terminal.\nssh pi@ip-raspberry\nFuente\n\n   Share a wireless connection via ethernet in GNOME 3.14 \n\n\n",
    "excerpt":"Guía para compartir la conexión a internet por wifi al puerto ethernet de la computadora",
    "url":"https://lewatoto.github.io/compartir-conexion-internet-gnome-3/",
    "fecha_publicada": "2017-02-04T00:13:00-06:00",
    "imagen": "https://lewatoto.github.io/assets/img/post/compartir-conexion-internet-gnome-3/portada.jpg",
    "etiquetas": ["Linux","Tutoriales","Raspberry Pi"]
  },
  
  "programar-arduino-pro-arduino-uno":{
    "titulo":"Programar Arduino Pro Mini con Arduino Uno SMD",
    "contenido":"\n\n Índice\n \n\n  Conexiones\n  Configuración en el Arduino IDE\n  Programando el Arduino Pro Mini\n  Posibles erorres\n\n\n    \n\n\n\nEs muy fácil programar el arduino pro mini con el arduino uno, en mi caso utilizó de los clones chinos, por lo que mi arduino uno es versión SMD. En los tutoriales en hay en línea se utiliza la versión DIP.\n\nConexiones\nLas conexiones dependerán de la versión de arduino pro mini que tengan ya sea la de 5v o la de 3.3v, en esta guía se utilizó la versión de 5v con el ATmega328 y las conexiones quedan de la siguiente forma:\n\n\n  \n    \n      Arduino Uno\n      Arduino Pro Mini 5V\n    \n  \n  \n    \n      5v\n      VCC\n    \n    \n      GND\n      GND\n    \n    \n      RX\n      RX\n    \n    \n      TX\n      TX\n    \n  \n\n\nPara finalizar conectamos el pin RESET del Arduino Uno SMD a GND, en la siguiente imagen se ven como quedan las conexiones.\n\n\n  \n    \n  \n  Diagrama de conexión entre el arduino uno y el Arduino Nano\n\n\nConfiguración en el Arduino IDE\n\nLa configuración en el IDE de Arduino quedaría (en mi caso) de la siguiente forma:\n\n\n  \n    \n  \n  Configuración del IDE de Arduino\n\n\nLos únicos parámetros que importan son Board, Processor y Port, que deberán elegir el que se adapte a la versión de Arduino pro mini que estén utilizando.\n\nProgramando el Arduino Pro Mini\n\nPara cargar el código en su Arduino lo hacen de forma normal, ya sea haciendo clic en la flecha que apunta a la derecha, en Sketch &gt; Upload o con el atajo Ctrl+U, cuando en la barra de estado aparezca el mensaje de “Subiendo” presionan el botón de RESET de su Arduino Pro mini y listo.\n\nPosibles erorres\n\nSi llegara a ocurrir un error como “avrdude: stk500_recv(): programmer is not responding” es por que no presionaron el botón de RESET a tiempo, solo hay que intentarlo de nuevo.\n",
    "excerpt":"Guía de como utilizar un Arduino Uno para programar un Arduino Pro Mini",
    "url":"https://lewatoto.github.io/programar-arduino-pro-arduino-uno/",
    "fecha_publicada": "2016-12-15T01:52:00-06:00",
    "imagen": "https://lewatoto.github.io/assets/img/post/programar-arduino-pro-arduino-uno/portada.jpg",
    "etiquetas": ["Tutoriales","Arduino"]
  },
  
  "instalacion-tipografias-linux":{
    "titulo":"Instalar varias tipografías a la vez en linux",
    "contenido":"\n\n Índice\n \n\n  Crear carpeta para almacenar las tipografías\n  Agregamos las tipografías que queremos instalar\n  Instalando las tipografías\n  Mensaje de instalación correcta\n  Fuente\n\n\n    \n\n\nTrabajando en un proyecto de la universidad me vi en la necesidad de buscar tipografías extra, luego de buscar un poco en los tantos lugares que nos ofrecen esto, me encontré con algunas que me podrían funcionar y lo mejor de todo tenían licencia 100% gratis, el problema fue que luego de conseguir mis archivos tenía que instalar uno por uno, lo cual es algo tedioso así que busqué la forma de hacerlo de forma automática y esto fue lo que encontré.\n\nCrear carpeta para almacenar las tipografías\n\nPrimero hay que crear una carpeta oculta en nuestro directorio home que se llame .fonts en la terminal escribimos:\nmkdir .fonts\nAgregamos las tipografías que queremos instalar\n\nLuego copiamos las tipografías que acabamos de descargar a ese directorio, recomiendo (aunque no lo he probado de otra forma) que en esa carpeta guarden los archivos de la siguiente forma:\n.fonts/Carpeta/archivos.ttf\nPrimero para llevar un mejor orden de las tipografías instaladas y luego que desconozco si el método a explicar escanea todos los sub directorios que tenga la carpeta .fonts\n\nInstalando las tipografías\n\nLuego de copiar todos los archivos basa ejecutar esto en la terminal:\nfc-cache -f -v\nMensaje de instalación correcta\n\nLes aparecerá algo parecido a esto:\nfc-cache -f -v\n[...]\n/home/lewatoto/.fonts: caching, new cache contents: 0 fonts, 20 dirs\n/home/lewatoto/.fonts/60sstripe: caching, new cache contents: 2 fonts, 0 dirs\n/home/lewatoto/.fonts/aspergit: caching, new cache contents: 6 fonts, 0 dirs\n/home/lewatoto/.fonts/bernardo_moda: caching, new cache contents: 3 fonts, 0 dirs\n/home/lewatoto/.fonts/clemente_pd: caching, new cache contents: 18 fonts, 0 dirs\n/home/lewatoto/.fonts/expressway: caching, new cache contents: 1 fonts, 0 dirs\n/home/lewatoto/.fonts/generica: caching, new cache contents: 2 fonts, 0 dirs\n/home/lewatoto/.fonts/geo_sans_light: caching, new cache contents: 2 fonts, 0 dirs\n/home/lewatoto/.fonts/hasteristico: caching, new cache contents: 2 fonts, 0 dirs\n/home/lewatoto/.fonts/komika_boo: caching, new cache contents: 1 fonts, 0 dirs\n/home/lewatoto/.fonts/komika_glaze: caching, new cache contents: 1 fonts, 0 dirs\n/home/lewatoto/.fonts/komika_parch: caching, new cache contents: 1 fonts, 0 dirs\n/home/lewatoto/.fonts/komika_sketch: caching, new cache contents: 1 fonts, 0 dirs\n/home/lewatoto/.fonts/komika_text: caching, new cache contents: 10 fonts, 0 dirs\n/home/lewatoto/.fonts/komika_title: caching, new cache contents: 12 fonts, 0 dirs\n/home/lewatoto/.fonts/ostrich_sans_inline: caching, new cache contents: 2 fonts, 0 dirs\n/home/lewatoto/.fonts/rns_camelia: caching, new cache contents: 1 fonts, 0 dirs\n/home/lewatoto/.fonts/roboto: caching, new cache contents: 16 fonts, 0 dirs\n/home/lewatoto/.fonts/rounded_elegance: caching, new cache contents: 1 fonts, 0 dirs\n/home/lewatoto/.fonts/tall_films: caching, new cache contents: 6 fonts, 0 dirs\n/home/lewatoto/.fonts/walkway: caching, new cache contents: 31 fonts, 0 dirs\n[...]\nfc-cache: succeeded\nLuego de esto ya podrán usar las tipografías en sus editores de texto, etc. para agregar nuevas tipografías solo hay que repetir el proceso.\n\nFuente\n\n\n   How to install many font files fast and easy?\n\n",
    "excerpt":"Guía personal de como instalar varias tipografías a la vez en Linux",
    "url":"https://lewatoto.github.io/instalacion-tipografias-linux/",
    "fecha_publicada": "2016-07-18T08:00:00-06:00",
    "imagen": "https://lewatoto.github.io/assets/img/post/instalacion-tipografias-linux/portada.jpg",
    "etiquetas": ["Linux","Tutoriales"]
  },
  
  "instalacion-basica-latex-textkaer-fedora":{
    "titulo":"Instalación básica de Latex y texmaker en Fedora",
    "contenido":"\n\n Índice\n \n\n  Instalación básica\n  Paquetes extra\n\n\n    \n\n\nDebido a que con cada nueva versión de Fedora actualizo desde cero me es útil tener una guía de como instalar los programas y/o librerías que más utilizo, con esto se instala el editor, las librerías básicas de LateX, soporte para el idioma español e IEEEtran.\n\nInstalación básica\ndnf -y install texmaker texlive-babel-spanish texlive-multirow texlive-IEEEtran texlive-collection-publishers\nPaquetes extra\n\nSi desean instalar alguna otra librería o hacer una instalación más completa pueden instalar alguno de los siguientes metapaquetes con dnf install [nombre del metapaquete]:\ntexlive-scheme-xml.noarch : XML scheme\ntexlive-scheme-full.noarch : full scheme (everything)\ntexlive-scheme-gust.noarch : GUST TeX Live scheme\ntexlive-scheme-basic.noarch : basic scheme (plain and latex)\ntexlive-scheme-small.noarch : small scheme (basic + xetex, metapost, a few languages)\ntexlive-scheme-tetex.noarch : teTeX scheme (more than medium, but nowhere near full)\ntexlive-scheme-medium.noarch : medium scheme (small + more packages and languages)\ntexlive-scheme-context.noarch : ConTeXt scheme\ntexlive-scheme-minimal.noarch : minimal scheme (plain only)\n",
    "excerpt":"Guía personal de instalación de LateX y el editor Texmaker con soporte para el idioma español e IEEEtran",
    "url":"https://lewatoto.github.io/instalacion-basica-latex-textkaer-fedora/",
    "fecha_publicada": "2016-02-19T11:10:00-06:00",
    "imagen": "https://lewatoto.github.io/assets/img/post/instalacion-basica-latex-textkaer-fedora/portada.jpg",
    "etiquetas": ["Linux","Tutoriales"]
  },
  
  "crear-blog-simple-jeykll":{
    "titulo":"Como crear un blog simple con Jekyll",
    "contenido":"\n\n Índice\n \n\n  Preparando el repositorio\n  Instalando Jekyll\n  Configurando el blog\n  Publicando entradas\n  Subiendo el blog a github\n\n\n    \n\n\nEn el primer post explicaré como montar un blog sencillo con Jekyll, tal vez no sea la mejor forma de hacerlo pero este es el método que utilicé para crear este blog.\n\nPreparando el repositorio\nPrimero necesitan crear una cuenta en github, luego crean un nuevo repositorio al cual deben llamar mi_usuario.github.io en el cual reemplazan mi_usuario por el nombre de usuario de github.\n\nLuego configuran el acceso a github desde la terminal:\n\ngit config --global color.ui true\ngit config --global user.name \"nombre de usuario\"\ngit config --global user.email \"dirección de correo\"\nssh-keygen -t rsa -C \"dirección de correo\"\n\nDeben pegar el contenido de la llave en este enlace, la llave se encuentra en home/.ssh/id_rsa.pub y para ver su contenido pueden ejecutar cat ~/.ssh/id_rsa.pub, cuando hayan realizado esto escriben en la terminal.\n\nssh -T git@github.com\n\nEn la terminal deberían de ver un mesaje parecido al siguiente:\n\nHi Lewatoto! You've successfully authenticated, but GitHub does not provide shell access.\n\nCon esto ya configurado clonan su repositorio con el siguiente comando:\n\ngit clone https://github.com/mi_usuario/mi_usuario.github.io.git\n\nInstalando Jekyll\nPara instalar Jekyll deben instalar las siguientes dependencias, pueden buscar un tutorial que se adapte a la distribución que estén utilizando:\n\n\n  Ruby.\n  RubyGems.\n  NodeJS u otro runtime de JavaScript.\n\n\nUna vez instaladas las dependencias ejecutan los siguiente:\n\ngem install jekyll\nrbenv rehash  # Si usas rbenv, rehash para poder ejecutar el comando\n\nPara crear el sitio escriben:\n\njekyll new mi_usuario.github.io\n\nEsto creará los archivos necesarios para su blog, por el momento los archivos y directorios que vamos a utilizar son:\n\n\n  _config.yml Es el archivo de configuración de su sitio.\n  _post Es la carpeta en la que deben agregar los archivos que serán las entradas en el blog.\n\n\nConfigurando el blog\n\nEn el archivo _config.ymlse configura lo siguiente:\n\n\n  title: El título del blog.\n  email: Por si desean mostrar su correo electrónico.\n  description: La descripción del blog.\n  baseurl: La ubicación del blog, por si lo está en alguna carpeta dentro de su repositorio, por ejemplo /blog/.\n  url: La dirección de su blog, en este caso es “http://mi_usuario.github.io”\n  twitter_username: El nombre de su usuario en twitter.\n  github_username: El nombre de su usuario en github.\n\n\nPublicando entradas\nPara publicar entradas deben crear un archivo nuevo en la carpeta _post con el formato YYYY-MM-DD-nombre-de-la-entrada.ext en donde ext es la extensión del archivo que puede ser .markdown o .md, pueden aprender lo básico de esta sintáxis pueden ver este enlace, un ejemplo de esto puede ser:\n\n---\nlayout: post\ntitle:  \"Mi primera publicación\"\ndate:   2014-10-05 17:58:11\ncategories: blog\n---\n\nMi primera entrada\n-------------------\n\nEsta es la primera publicación en mi nuevo blog.\n\nEn donde se layout define si es una entrada o es una página (estás deben ir en la carpeta raíz), el título de la entrada, la fecha de publicación y las categorías de la entrada.\n\nSubiendo el blog a github\n\nEn la terminal deben colocarse dentro de la carpeta con el comando:\n\ncd mi_usuario.github.io/\n# luego deben ejecutar lo siguiente\ngit add --all\ngit commit -m \"pueden ponder cualquier comentario\"\ngit push origin master\n\nLes pediran su nombre de usuario de github y su contraseña, si todo funciona bien, deverían de ver algo parecido a esto.\n\nlewatoto.github.io$ git push origin master\nUsername for 'https://github.com': Lewatoto\nPassword for 'https://Lewatoto@github.com':\nCounting objects: 7, done.\nDelta compression using up to 4 threads.\nCompressing objects: 100% (4/4), done.\nWriting objects: 100% (4/4), 554 bytes | 0 bytes/s, done.\nTotal 4 (delta 2), reused 0 (delta 0)\nTo https://github.com/Lewatoto/lewatoto.github.io.git\n   8576c7f..8b2e4a0  master -&gt; master\n\nSi todo ha salido bien pueden ingresar en su blog, entrando en la dirección http://mi_usuario.github.io/, este es el método que utilice para crear este blog, iré publicando mas tutoriales conforme aprenda mas sobre esto, por el momento aquí termina la primera entrada.\n\n",
    "excerpt":"Guía para la creación de un blog simple con Jekyll, método utilizado en la creación de la primer versión de este blog",
    "url":"https://lewatoto.github.io/crear-blog-simple-jeykll/",
    "fecha_publicada": "2014-10-05T11:58:11-06:00",
    "imagen": "https://lewatoto.github.io/assets/img/post/crear-blog-simple-jeykll/portada.jpg",
    "etiquetas": ["Tutoriales","Jekyll"]
  },
  
  "configurar-diccionario-textmaker":{
    "titulo":"Configurar diccionario en texmaker",
    "contenido":"\n\n Índice\n \n\n  Conseguir los archivos de diccionario\n  Extrayendo los archivos necesarios\n  Configurando TextMaker\n\n\n    \n\n\nConseguir los archivos de diccionario\n\nPara configurar el corrector ortográfico en español, por cierto pueden utilizar los diccionarios de OpenOffice \no LibreOffice, \nuna vez que hayan descargado los diccionarios el proceso sería así.\n\nExtrayendo los archivos necesarios\n\nCambien la extensión del archivo a .7z .rar .zip o la que quieran siempre y cuando sea de un archivo comprimido.\n\n\n  \n    \n  \n  Cambio de extensión archivos\n\n\nExtraen el contenido de la carpeta, encontrarán un archivo con extensión .dic y otro con extensión .aff los dos deben de tener el mismo nombre. Estos los pueden mover a una carpeta aparte para estar mas organizados.\n\n\n  \n    \n  \n  Visualizando el contenido del archivo comprimido\n\n\nConfigurando TextMaker\n\nLuego abren Texmaker y van a Opciones &gt; Configurar Texmaker &gt; Editor, verán lo siguiente.\n\n\n  \n    \n  \n  Ventana de configuración de TextMaker\n\n\nEn la sección que dice diccionario ortográfico, seleccionan la carpeta que aparece a la derecha y buscan la ubicación en la que tienen los archivos .dic y .aff, seleccionan el .dic luego marcan la casilla de integrado para que la corrección sea en tiempo real, guardan las preferencias y listo.\n\n\n  \n    \n  \n  Demostración de la corrección otrográfica en tiempo real\n\n",
    "excerpt":"Guía de como configurar un diccionario para la corrección ortográfica en español en TextMaker",
    "url":"https://lewatoto.github.io/configurar-diccionario-textmaker/",
    "fecha_publicada": "2012-10-18T22:36:00-06:00",
    "imagen": "https://lewatoto.github.io/assets/img/post/configurar-diccionario-textmaker/portada.jpg",
    "etiquetas": ["Linux","Tutoriales"]
  }
  
};
